has_queue = {
	NOR = {
		check_variable = { which = autofabs_queue value > 0 }
		check_variable = { which = autofab_energy_queue value = 0 }
		check_variable = { which = autofab_mineral_queue value = 0 }
		check_variable = { which = autofab_food_queue value = 0 }
		check_variable = { which = autofab_alloys_queue value = 0 }
		check_variable = { which = autofab_congoods_queue value = 0 }
		check_variable = { which = autofab_motes_queue value = 0 }
		check_variable = { which = autofab_gases_queue value = 0 }
		check_variable = { which = autofab_crystals_queue value = 0 }
		check_variable = { which = autofab_extractor_queue value = 0 }
	}
}

can_upgrade_foundry = {
	exists = owner
	owner = { has_technology = tech_alloys_1 }
	OR = {
		has_deposit = autofab_foundry
		AND = {
			has_deposit = autofab_foundry_2
			exists = owner
			owner = { has_technology = tech_alloys_2 }
		}
	}
}

can_upgrade_factory = {
	exists = owner
	owner = { has_technology = tech_luxuries_1 }
	OR = {
		has_deposit = autofab_factory
		AND = {
			has_deposit = autofab_factory_2
			exists = owner
			owner = { has_technology = tech_luxuries_2 }
		}
	}
}

#Country Scope
can_afford_autofab = {
	resource_stockpile_compare = {
		resource = minerals
		value >= 200
	}
	resource_stockpile_compare = {
		resource = alloys
		value >= 100
	}
	resource_stockpile_compare = {
		resource = energy
		value >= 200
	}
}
can_afford_district = {
	resource_stockpile_compare = {
		resource = minerals
		value >= @districtcost
	}
	resource_stockpile_compare = {
		resource = alloys
		value >= @factoryalloycost
	}
}
can_afford_building = {
	resource_stockpile_compare = {
		resource = minerals
		value >= @b1_minerals
	}
	resource_stockpile_compare = {
		resource = alloys
		value >= @factoryalloycost
	}
}
can_afford_t2_foundry = {
	resource_stockpile_compare = {
		resource = minerals
		value >= @b2_minerals
	}
	resource_stockpile_compare = {
		resource = volatile_motes
		value >= @b2_rare_cost
	}
	resource_stockpile_compare = {
		resource = alloys
		value >= @factoryalloycost
	}
	resource_income_compare = { resource = volatile_motes  value > @b2_rare_upkeep }
	resource_income_compare = { resource = energy  value > 9 }
	resource_income_compare = { resource = minerals  value > 18 }
}
can_afford_t3_foundry = {
	resource_stockpile_compare = {
		resource = minerals
		value >= @b3_minerals
	}
	resource_stockpile_compare = {
		resource = volatile_motes
		value >= @b3_rare_cost
	}
	resource_stockpile_compare = {
		resource = alloys
		value >= @factoryalloycost
	}
	resource_income_compare = { resource = volatile_motes  value > @b3_rare_upkeep }
	resource_income_compare = { resource = energy  value > 9 }
	resource_income_compare = { resource = minerals  value > 18 }
}
can_afford_t2_factory = {
	resource_stockpile_compare = {
		resource = minerals
		value >= @b2_minerals
	}
	resource_stockpile_compare = {
		resource = rare_crystals
		value >= @b2_rare_cost
	}
	resource_stockpile_compare = {
		resource = alloys
		value >= @factoryalloycost
	}
	resource_income_compare = { resource = rare_crystals  value > @b2_rare_upkeep }
	resource_income_compare = { resource = energy  value > 9 }
	resource_income_compare = { resource = minerals  value > 18 }
}
can_afford_t3_factory = {
	resource_stockpile_compare = {
		resource = minerals
		value >= @b3_minerals
	}
	resource_stockpile_compare = {
		resource = rare_crystals
		value >= @b3_rare_cost
	}
	resource_stockpile_compare = {
		resource = alloys
		value >= @factoryalloycost
	}
	resource_income_compare = { resource = rare_crystals  value > @b3_rare_upkeep }
	resource_income_compare = { resource = energy  value > 9 }
	resource_income_compare = { resource = minerals  value > 18 }
}

